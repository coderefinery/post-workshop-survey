Submitter,Submitter Email,Submission Date,Background information: Which workshop did you attend?,Background information: Participation style,Background information: What is your current position?,Impact of the workshop: Would you judge your code to be better reusable/reproducible/modular/documented as a result of attending the workshop?,Impact of the workshop: Which tools/services/workflows have you started using as a result of attending the workshop?,Impact of the workshop: Which tools/services/workflows are you using better than before as a result of attending the workshop?,Impact of the workshop: Which tools/services/workflows are you using in the same way as you did before attending the workshop?,Impact of the workshop: Which tools/services/workflows are you not using?,Impact of the workshop: Has it become easier for you to collaborate on software development with your colleagues and collaborators?,Impact of the workshop: Have you introduced one or more of your colleagues to new tools or practices as a result of the workshop?,Impact of the workshop: Would you recommend your colleagues to attend a CodeRefinery workshop?,Impact of the workshop: What else has changed in how you write code for your research after attending a CodeRefinery workshop?,Impact of the workshop: Do you have any recommendations on how we should change the CodeRefinery curriculum?
,,2021-07-19 14:08:17.793232+00:00,"Online, Nov 2020",Individual learner,Researcher,More reproducible,Version control (e.g. Git); Code review (e.g. via pull requests),Version control (e.g. Git); Code review (e.g. via pull requests),None of the above,Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Conda environments and virtual environments,Yes,No,Yes absolutely,,
,,2021-07-13 16:01:36.501749+00:00,"Online, May-June 2020",Team learner (online),Researcher,More reusable; More reproducible; Better documented,Version control (e.g. Git),Version control (e.g. Git),None of the above,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Conda environments and virtual environments,Yes,Yes,Yes absolutely,"My code writing is more organised now that I am using Git. I do not end up in a 'what the hell did I code today' state anymore, because I am using Git.",
,,2021-07-07 16:46:20.835430+00:00,"Online, Oct 2020",Individual learner,Postdoc,More modular; Better documented,Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages),Version control (e.g. Git); Code review (e.g. via pull requests); Jupyter Notebooks,Jupyter Notebooks,Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Conda environments and virtual environments,Yes,Yes,Yes absolutely,,
,,2021-06-28 08:18:33.473604+00:00,"Stockholm, Nov 2019",Individual learner,Graduate student,None of the above,None of the above,Version control (e.g. Git),None of the above,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Conda environments and virtual environments,Yes,No,Probably,,
,,2021-06-28 07:11:17.822805+00:00,"Online, Oct 2020",Individual learner,Graduate student,More reusable; More reproducible,Code review (e.g. via pull requests); Testing (e.g. pytest),Version control (e.g. Git),Jupyter Notebooks; Conda environments and virtual environments,Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,,
,,2021-06-24 14:34:49.355192+00:00,"Online, Oct 2020",Individual learner,Researcher,More reproducible; Better documented,None of the above,Version control (e.g. Git),None of the above,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Conda environments and virtual environments,Yes,Yes,Yes absolutely,"I haven't written much code afterwards, but I think the course was extremely useful and I think I will benefit from it in the future.",
,,2021-06-23 09:20:17.452835+00:00,"Online, Nov 2020",Team learner (online),Other,More reusable; More reproducible; Better documented,Version control (e.g. Git); Testing (e.g. pytest); Jupyter Notebooks; Conda environments and virtual environments,Version control (e.g. Git); Code review (e.g. via pull requests); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages),None of the above,Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,,It's great.
,,2021-06-22 09:59:17.331851+00:00,"Online, May-June 2020",Individual learner,Industry,More reproducible; Better documented,Version control (e.g. Git); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Containers (e.g. Docker or Singularity); Conda environments and virtual environments,Version control (e.g. Git); Code review (e.g. via pull requests); Testing (e.g. pytest); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Containers (e.g. Docker or Singularity); Conda environments and virtual environments,Jupyter Notebooks,Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake),Yes,Yes,Yes absolutely,I have now learned about 40% of trained content in course. Main reason why not implementing it fully is that mostly my code development is again one-man-show.,"I believe everything is in place, couldn't ask for more."
,,2021-06-22 08:53:49.199199+00:00,"Online, Oct 2020",Individual learner,Graduate student,More reusable,Code review (e.g. via pull requests),Version control (e.g. Git); Code review (e.g. via pull requests); Jupyter Notebooks,None of the above,Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,,"maybe include some best practices about how to organize your project, such as using folder structure, packages in sub folder of the project/separate location. Packaging a project with pip and publishing."
,,2021-06-22 07:48:38.606731+00:00,"Online, Nov 2020",Individual learner,Research software engineer / Scientific programmer,More reusable; More reproducible; More modular; Better documented,Version control (e.g. Git); Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions of GitLab CI); Containers (e.g. Docker or Singularity); Conda environments and virtual environments,Version control (e.g. Git); Code review (e.g. via pull requests); Containers (e.g. Docker or Singularity),Jupyter Notebooks,Workflow management tools (e.g. Snakemake),Yes,Yes,Yes absolutely,more focus on right tool for the right job,I would like to see more about containers in a real project:D
,,2021-06-22 07:20:21.278731+00:00,"Online, Oct 2020",Individual learner,Graduate student,More reusable,Version control (e.g. Git); Code review (e.g. via pull requests); Conda environments and virtual environments,Version control (e.g. Git),Jupyter Notebooks,Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Containers (e.g. Docker or Singularity),Yes,No,Yes absolutely,,
,,2021-06-22 07:19:54.341058+00:00,"Online, May-June 2020",Team learner (online),Undergraduate student,More reusable; More reproducible; More modular; Better documented,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions of GitLab CI); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake); Conda environments and virtual environments,Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Jupyter Notebooks; Workflow management tools (e.g. Snakemake),Version control (e.g. Git),Code coverage analysis (e.g. Coveralls); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,,you could introduce some new and handy tools like nbdev and papermill
,,2021-06-22 07:12:13.613489+00:00,"Online, May-June 2020",Team learner (online),Graduate student,Better documented,Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake),Version control (e.g. Git); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake),Code review (e.g. via pull requests); Testing (e.g. pytest); Jupyter Notebooks; Containers (e.g. Docker or Singularity),Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Conda environments and virtual environments,No,Yes,Yes absolutely,,"Keep those group exercises, they are very good. I also liked HackMD which I started use myself in teaching."
,,2021-06-22 06:22:03.577645+00:00,"Online, Nov 2020",Individual helper / exercise leader (online),Graduate student,More reusable; More reproducible; Better documented,Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages),Version control (e.g. Git); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages),Testing (e.g. pytest); Conda environments and virtual environments,Code review (e.g. via pull requests); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,,
,,2021-06-21 10:39:35.552205+00:00,"Espoo, Dec 2019",Individual learner,Researcher,More reusable; More reproducible; More modular; Better documented,Version control (e.g. Git); Testing (e.g. pytest); Conda environments and virtual environments,Code review (e.g. via pull requests); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages),None of the above,Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,,Continue the good job!
,,2021-06-21 10:09:39.461184+00:00,"Online, May-June 2020",Team helper / exercise leader (online),Postdoc,More reusable; More reproducible; More modular; Better documented,Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Conda environments and virtual environments,Version control (e.g. Git); Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Conda environments and virtual environments,Jupyter Notebooks,None of the above,Yes,Yes,Yes absolutely,,I think the online format in teams worked very well. It would be nice to have more time for collaborative git exercises.
,,2021-06-21 08:41:22.535723+00:00,"Online, Nov 2020",Individual learner,Researcher,More reusable; More reproducible; More modular,Version control (e.g. Git); Jupyter Notebooks; Conda environments and virtual environments,Version control (e.g. Git); Jupyter Notebooks; Conda environments and virtual environments,None of the above,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,"I've become more organised on my coding, shorter scripts and being more conscious that my future self can understand what is going on. I'm using GitHub much more now and look forward to practice with some of the other tools learned.","You're doing a great job, please continue with this form of education. I really enjoyed the interactive Q&A and how we can update documents online alive. I'd like to add such features on my own courses."
,,2021-06-21 08:33:13.788900+00:00,"Online, Nov 2020",Team helper / exercise leader (online),Researcher,None of the above,Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages),Version control (e.g. Git); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages),Version control (e.g. Git); Testing (e.g. pytest),Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Jupyter Notebooks; Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Conda environments and virtual environments,No,Yes,Yes absolutely,"I consider myself a rather experienced programmer, already using git fluently. I attended the course to refresh some things and to learn some new ones.     The workshop filled my expectations quite well. The reason why I cannot leverage all the things thought there are:    a) My colleagues are mostly scientists, and (implicitly) consider SW a ""second class citizen"", in that SW quality and practices are not given much attention and importance. This is a big mistake, in my opinion, but the reality of every-day life shows that this is the case.    b) My working environment (formed by my colleagues) is rather rigid, and slow when it comes to even considering other tools/practices than the default, consolidated ones (Matlab). It is like hitting granite. There are nice words of consideration of change, but a huge inertia.","Target not only potential attendees (programmers), but also  explicitly leaders (department heads, heads of institutions) who can better push employees to attend the courses. Explain them that SW quality and modern, effective production/maintenance practices are really important for scientists.     Create a program (including concrete steps) towards change for organizations that are scared about changing old habits and tools. Find strategic persons that could work from the inside, and support them towards pushing change in their organization.    Discuss and prepare material that help to harmonize programming practices in ""spaghetti"" groups/environments. Things that are important for some (e.g. coding style, git flow, etc. ) sound like science fiction for many."
,,2021-06-21 08:08:07.077660+00:00,"Online, May-June 2020",Team learner (online),Researcher,More reusable; More reproducible; More modular; Better documented,Code review (e.g. via pull requests); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Conda environments and virtual environments,Version control (e.g. Git); Code review (e.g. via pull requests); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages),Jupyter Notebooks; Containers (e.g. Docker or Singularity),Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake),Yes,Yes,Yes absolutely,,
,,2021-06-21 07:47:32.749667+00:00,"Online, Oct 2020",Team learner (online),Researcher,More reusable; Better documented,Code review (e.g. via pull requests); Jupyter Notebooks; Conda environments and virtual environments,Jupyter Notebooks,None of the above,Version control (e.g. Git); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,,The workshop was great but rather long- shorter courses focusing on fewer tools would  be more practical from my point of view. There was so much here that I got overwhelmed by the end.
,,2021-06-21 07:43:39.187033+00:00,"Espoo, Dec 2019",Individual learner,Graduate student,More reusable; More reproducible,Workflow management tools (e.g. Snakemake),Version control (e.g. Git); Containers (e.g. Docker or Singularity),Version control (e.g. Git); Conda environments and virtual environments,Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages),No,Yes,Yes absolutely,,
,,2021-06-21 07:35:15.444864+00:00,"Online, Oct 2020",Individual helper / exercise leader (online),Research software engineer / Scientific programmer,More reusable; Better documented,Conda environments and virtual environments,Version control (e.g. Git); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Conda environments and virtual environments,Jupyter Notebooks; Containers (e.g. Docker or Singularity),Code review (e.g. via pull requests); Workflow management tools (e.g. Snakemake),No,No,Yes absolutely,,
,,2021-06-21 07:33:31.515553+00:00,"Espoo, Dec 2019",Individual learner,Research software engineer / Scientific programmer,More reusable; More reproducible,None of the above,Version control (e.g. Git),Containers (e.g. Docker or Singularity); None of the above,Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Conda environments and virtual environments,Yes,No,Yes absolutely,,
,,2021-06-21 06:29:08.069286+00:00,"Online, May-June 2020",Team learner (online),Researcher,More reusable,Version control (e.g. Git); Containers (e.g. Docker or Singularity),Version control (e.g. Git); Jupyter Notebooks,Containers (e.g. Docker or Singularity),Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake),Yes,Yes,Yes absolutely,I am more aware of the possibilities even if I have not been successful in taking new methods and such into use,"I would like a next step course, or some theme courses that deal with problems specific to coding in research. For example reviving 10 years old code ;-)"
,,2021-06-21 06:21:12.354151+00:00,"Online, May-June 2020",Team learner (online),Undergraduate student,More reusable; More reproducible,Version control (e.g. Git),Version control (e.g. Git),Conda environments and virtual environments,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),No,No,Yes absolutely,,
,,2021-06-21 06:14:13.409017+00:00,"Online, May-June 2020",Team learner (online),Postdoc,None of the above,Version control (e.g. Git),Version control (e.g. Git); Conda environments and virtual environments,None of the above,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,"My personal work is at present focused more towards project management so I have not had much time to apply the course content in my personal coding work.    However, I'm advertising the CodeRefinery courses to my team members and I'm pushing instructing them to follow better version control practises along CodeRefinery guidance.",
,,2021-06-20 17:39:17.118082+00:00,"Stockholm, Nov 2019",Individual learner,Industry,More reusable; More reproducible; More modular; Better documented,Code review (e.g. via pull requests); Jupyter Notebooks; Containers (e.g. Docker or Singularity); Conda environments and virtual environments,Version control (e.g. Git); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Containers (e.g. Docker or Singularity); Conda environments and virtual environments,None of the above,Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls),Yes,Yes,Yes absolutely,,"It is very useful and effective as it is, I would not change anything"
,,2021-06-19 12:30:10.115290+00:00,"Online, Nov 2020",Individual learner,Professor,None of the above,None of the above,None of the above,Version control (e.g. Git),Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Conda environments and virtual environments,No,No,Yes absolutely,"Sorry, But the workshop was good it is hard to get time in the daily work routines to change the habits and become better familiar with these tools including git!","No, it was good."
,,2021-06-19 10:17:49.673632+00:00,"Lille, Nov-Dec 2019",Individual learner,Postdoc,More reusable; More reproducible; More modular,Code review (e.g. via pull requests); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake),Version control (e.g. Git); Testing (e.g. pytest),Jupyter Notebooks,Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Containers (e.g. Docker or Singularity); Conda environments and virtual environments,No,No,Yes absolutely,I better implemented MVC architecture and makes my desktop application development easier and more modular,"In addition to introducing modular programming, talk about different software architecture, and discuss their advantages, disadvantages, and common usage."
,,2021-06-19 09:01:25.659637+00:00,"Espoo, Dec 2019",Individual learner,Professor,More reusable; More modular; Better documented,Version control (e.g. Git); Jupyter Notebooks; Conda environments and virtual environments,None of the above,None of the above,Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,,
,,2021-06-19 07:29:27.950603+00:00,"Trondheim, Oct 2019",Individual learner,Industry,More reusable; More reproducible; More modular; Better documented,Version control (e.g. Git); Code review (e.g. via pull requests); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages),Version control (e.g. Git); Code review (e.g. via pull requests); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages),None of the above,Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls),Yes,Yes,Yes absolutely,,
,,2021-06-19 06:48:17.981634+00:00,"Trondheim, Oct 2019",Individual learner,Postdoc,None of the above,Version control (e.g. Git),Version control (e.g. Git); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Conda environments and virtual environments,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Containers (e.g. Docker or Singularity),Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,No,Probably,,
,,2021-06-18 23:02:01.582404+00:00,"Trondheim, Oct 2019",Individual learner,Other,More modular,Version control (e.g. Git); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Conda environments and virtual environments,Version control (e.g. Git),None of the above,Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,,
,,2021-06-18 22:22:56.017113+00:00,"Online, Nov 2020",Individual learner,Postdoc,More reusable; More reproducible; More modular; Better documented,Version control (e.g. Git); Code review (e.g. via pull requests); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages),None of the above,None of the above,Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Conda environments and virtual environments,Yes,Yes,Yes absolutely,,
,,2021-06-18 18:28:35.941734+00:00,"Online, Oct 2020",Individual learner,Postdoc,More reproducible; More modular,Testing (e.g. pytest); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Conda environments and virtual environments,Version control (e.g. Git),None of the above,Code review (e.g. via pull requests); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),No,No,Yes absolutely,,
,,2021-06-18 15:53:34.295300+00:00,"Online, Oct 2020",Individual learner,Researcher,More reusable; More reproducible; More modular,Version control (e.g. Git); Jupyter Notebooks; Conda environments and virtual environments,Version control (e.g. Git); Jupyter Notebooks; Conda environments and virtual environments,None of the above,Code review (e.g. via pull requests); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,I got more confident.,"Give more time in workshops and maybe develop follow up workshops on topics.    Do a workshop with Python on HPC and streaming, on GPU programming with Python.     The Nordic universities should support your better and give you more money and permanent staff."
,,2021-06-18 15:33:49.082065+00:00,"Online, Oct 2020",Individual learner,Researcher,More reproducible; More modular; Better documented,Version control (e.g. Git); Jupyter Notebooks,Version control (e.g. Git); Jupyter Notebooks,None of the above,Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Conda environments and virtual environments,Yes,No,Yes absolutely,,
,,2021-06-18 15:31:21.659285+00:00,"Online, May-June 2020",Individual helper / exercise leader (online),Graduate student,More reusable,Conda environments and virtual environments,Version control (e.g. Git),Jupyter Notebooks,Workflow management tools (e.g. Snakemake),Yes,Yes,Yes absolutely,I'm more confident when doing it.,"No, it's ok as I took it."
,,2021-06-18 15:19:43.699042+00:00,"Trondheim, Feb 2020",Individual learner,Industry,More reusable; More reproducible; More modular; Better documented,Version control (e.g. Git); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions of GitLab CI); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Containers (e.g. Docker or Singularity); Conda environments and virtual environments,Version control (e.g. Git); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Containers (e.g. Docker or Singularity); Conda environments and virtual environments,None of the above,Jupyter Notebooks; Workflow management tools (e.g. Snakemake),Yes,Yes,Yes absolutely,,
,,2021-06-18 15:15:05.699130+00:00,"Trondheim, Feb 2020",Individual learner,Research software engineer / Scientific programmer,More reusable; More reproducible; More modular; Better documented,Version control (e.g. Git); Testing (e.g. pytest); Jupyter Notebooks,Version control (e.g. Git); Code review (e.g. via pull requests); Testing (e.g. pytest); Jupyter Notebooks,Conda environments and virtual environments,Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,,
,,2021-06-18 14:52:22.860673+00:00,"Stockholm, Nov 2019",Individual learner,Researcher,More reusable; Better documented,Automated testing (e.g Travis CI or GitHub Actions of GitLab CI); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages),Version control (e.g. Git),Conda environments and virtual environments,Code review (e.g. via pull requests); Testing (e.g. pytest); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,,
,,2021-06-18 14:40:29.804089+00:00,"Online, Nov 2020",Individual learner,Graduate student,More reusable,Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages),Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Conda environments and virtual environments,Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages),Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Probably,I kind of wished I had received this immediately after the workshop. Too much time has passed I don't even remember exactly what was discussed.,It would be nice to have a more advanced workshop
,,2021-06-18 14:30:58.232458+00:00,"Trondheim, Feb 2020",Individual learner,Graduate student,More reusable; More reproducible; More modular; Better documented,Version control (e.g. Git); Code review (e.g. via pull requests); Automated testing (e.g Travis CI or GitHub Actions of GitLab CI); Conda environments and virtual environments,Version control (e.g. Git); Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Conda environments and virtual environments,None of the above,None of the above,No,Yes,Yes absolutely,,
,,2021-06-18 14:18:37.878020+00:00,"Online, May-June 2020",Individual learner,Graduate student,More reproducible; More modular; Better documented,Version control (e.g. Git); Jupyter Notebooks,Version control (e.g. Git); Conda environments and virtual environments,Jupyter Notebooks,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),No,Yes,Yes absolutely,,"overall pretty interesting and relevant, mainly institutional inertia that keeps me from applying more of what I learned.    perhaps fewer different topics are prefereable sometimes, to be able to get some exercise and repitition."
,,2021-06-18 14:15:11.022562+00:00,"Online, Nov 2020",Team helper / exercise leader (online),Research software engineer / Scientific programmer,None of the above,None of the above,None of the above,Version control (e.g. Git); Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Conda environments and virtual environments,Workflow management tools (e.g. Snakemake); Conda environments and virtual environments,Yes,Yes,Yes absolutely,I was an instructor so not much,I am good. :)
,,2021-06-18 14:12:19.725699+00:00,"Online, Nov 2020",Team helper / exercise leader (online),Researcher,More reusable; Better documented,Version control (e.g. Git); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Conda environments and virtual environments,Version control (e.g. Git); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages),None of the above,Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,When I am codingI am taking into account my Read the docs site and I write in consequence.,"There is a lot of information for one single course.  I would do courses, as far as possible, with more specific and focused topics.    Anyway, was a great experience to attend your course. Keep it up! Congratulations!"
,,2021-06-18 14:04:48.276869+00:00,"Trondheim, Oct 2019",Individual learner,Industry,More reusable; More reproducible; More modular,None of the above,Version control (e.g. Git); Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Workflow management tools (e.g. Snakemake),None of the above,Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Containers (e.g. Docker or Singularity); Conda environments and virtual environments,Yes,Yes,Probably,"Better focused on functional tests, and writing og these.","Improve still om functional tests, and introduce  difference between difference abstraction Leveld om the code. Introduce testing of statemachines?"
,,2021-06-18 13:59:47.506402+00:00,"Online, Oct 2020",Individual learner,Researcher,More reusable; More modular,Version control (e.g. Git); Testing (e.g. pytest); Jupyter Notebooks; Containers (e.g. Docker or Singularity); Conda environments and virtual environments,Version control (e.g. Git); Testing (e.g. pytest); Jupyter Notebooks; Containers (e.g. Docker or Singularity); Conda environments and virtual environments,None of the above,Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages),Yes,No,Yes absolutely,I become aware how important it is to write readable and reproducible code. Before writing code I first think how to write code in a modular way and how these modules can be tested. Then I write a test for that module.,No recommendations. I enjoyed the workshop!
,,2021-06-18 13:54:36.947552+00:00,"Online, Oct 2020",Individual learner,Postdoc,More reusable; More reproducible; Better documented,None of the above,Version control (e.g. Git); Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Conda environments and virtual environments,Conda environments and virtual environments,Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,"More focus on that results and papers should be reproducible, ideally even for referees.",
,,2021-06-18 13:51:13.394205+00:00,"Online, Nov 2020",Team helper / exercise leader (online),Research software engineer / Scientific programmer,More reproducible; Better documented,Code review (e.g. via pull requests); Automated testing (e.g Travis CI or GitHub Actions of GitLab CI); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages),Version control (e.g. Git),None of the above,Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake),Yes,Yes,Yes absolutely,,
,,2021-06-18 13:50:54.051059+00:00,"Online, Oct 2020",Individual learner,Researcher,More reproducible; Better documented,Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions of GitLab CI); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake),Version control (e.g. Git); Jupyter Notebooks; Containers (e.g. Docker or Singularity); Conda environments and virtual environments,None of the above,Code review (e.g. via pull requests); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI),Yes,Yes,Yes absolutely,,
,,2021-06-18 13:47:01.346561+00:00,"Online, Nov 2020",Team learner (online),Graduate student,More reusable,Version control (e.g. Git); Jupyter Notebooks,Version control (e.g. Git); Jupyter Notebooks,None of the above,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Conda environments and virtual environments,Yes,No,Yes absolutely,,Maybe you can do programmation workshop
,,2021-06-18 13:46:54.311108+00:00,"Online, Nov 2020",Individual learner,Researcher,None of the above,Version control (e.g. Git),Version control (e.g. Git),None of the above,Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages),Yes,No,Yes absolutely,,
,,2021-06-18 13:45:17.909334+00:00,"Online, May-June 2020",Team learner (online),Professor,More reusable; More reproducible; More modular; Better documented,Code review (e.g. via pull requests); Testing (e.g. pytest); Jupyter Notebooks,Version control (e.g. Git); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake); Conda environments and virtual environments,None of the above,Code coverage analysis (e.g. Coveralls); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,I have a much broader understanding of these tools and why they are important. I regularly use the tutorials and movies to help teach new incoming students in between CodeRefinery workshops.,"I would have liked practical exercises on Snakemake and Docker, but then it would be a little long - tough call. I think the current format is a good compromise."
,,2021-06-18 13:44:59.307621+00:00,"Online, Nov 2020",Team helper / exercise leader (online),Professor,None of the above,Version control (e.g. Git); Jupyter Notebooks,Version control (e.g. Git); Jupyter Notebooks; Conda environments and virtual environments,Containers (e.g. Docker or Singularity),Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake),No,Yes,Yes absolutely,The project team has a common understanding of why and how to track code versions and collaborate on processing scripts,
,,2021-06-18 13:42:29.231083+00:00,"Online, Nov 2020",Individual learner,Researcher,More reusable; More reproducible; More modular; Better documented,Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions of GitLab CI); Workflow management tools (e.g. Snakemake); Conda environments and virtual environments,None of the above,Version control (e.g. Git); None of the above,Code review (e.g. via pull requests); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,,
,,2021-06-18 13:42:26.254756+00:00,"Online, May-June 2020",Team helper / exercise leader (online),Other,Better documented,None of the above,Version control (e.g. Git),Jupyter Notebooks; Workflow management tools (e.g. Snakemake); Conda environments and virtual environments,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,Not applicable.,Keep up the great work! Thank you! :)
,,2021-06-18 13:40:00.317139+00:00,"Espoo, Dec 2019",Individual learner,Industry,More reusable; More modular; Better documented,Code review (e.g. via pull requests); Testing (e.g. pytest); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Containers (e.g. Docker or Singularity),Version control (e.g. Git); Code review (e.g. via pull requests); Testing (e.g. pytest); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Containers (e.g. Docker or Singularity),Jupyter Notebooks; Containers (e.g. Docker or Singularity); Conda environments and virtual environments,Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake),Yes,No,Yes absolutely,"My understanding of DevOps have improved, though I did not use it much, at least my general understanding have improved. I saw more value on the tooling side, bringing picture together rather than on the code standards. E.g. running some tool like matlab via docker was smth that I was not aware before.",MLops? DevOps concepts may be?     How to write good pull requests. I came recently to see good articles on that topic    https://mtlynch.io/human-code-reviews-1/    https://chris.beams.io/posts/git-commit/    https://www.midori-global.com/blog/2018/04/02/git-50-72-rule    https://github.blog/2015-01-21-how-to-write-the-perfect-pull-request/    https://carlosperez.medium.com/pull-request-first-f6bb667a9b6
,,2021-06-18 13:38:00.163485+00:00,"Online, Oct 2020",Individual learner,Graduate student,More reusable; More reproducible; More modular,Version control (e.g. Git); Code review (e.g. via pull requests); Jupyter Notebooks; Conda environments and virtual environments,Version control (e.g. Git); Code review (e.g. via pull requests); Jupyter Notebooks; Conda environments and virtual environments,None of the above,Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,I got a lot more confidence in using git and gitlabs.,"none, i liked it a lot"
,,2021-06-18 13:37:27.740069+00:00,"Espoo, Dec 2019",Individual learner,Graduate student,More reusable; More reproducible; Better documented,Version control (e.g. Git),Version control (e.g. Git); Code review (e.g. via pull requests),Jupyter Notebooks,Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,No,Yes absolutely,,"I am super grateful for your great work. I was a total beginner when attending, but I got familiar with many things during the workshop and when I eventually had to start using e.g. Git, it was so so much easier and approachable. Thank you!"
,,2021-06-18 13:35:51.957114+00:00,"Online, May-June 2020",Individual learner,Graduate student,More reusable; Better documented,Version control (e.g. Git); Code review (e.g. via pull requests),None of the above,None of the above,Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Conda environments and virtual environments,Yes,Yes,Probably,,
,,2021-06-18 13:34:37.157721+00:00,"Online, May-June 2020",Team learner (online),Graduate student,More reusable; Better documented,Automated testing (e.g Travis CI or GitHub Actions of GitLab CI); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages),Version control (e.g. Git); Testing (e.g. pytest),Conda environments and virtual environments,Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,,
,,2021-06-18 13:34:21.386670+00:00,"Online, May-June 2020",Team learner (online),Researcher,More modular,None of the above,Version control (e.g. Git); Jupyter Notebooks; Conda environments and virtual environments,None of the above,Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,No,Yes absolutely,,
,,2021-06-18 13:31:45.047318+00:00,"Online, May-June 2020",Individual learner,Undergraduate student,More reusable; Better documented,Version control (e.g. Git); Conda environments and virtual environments,Version control (e.g. Git); Conda environments and virtual environments,Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages),Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,No,Probably,I add more documentation and use git,
,,2021-06-18 13:31:23.018014+00:00,"Online, May-June 2020",Team learner (online),Researcher,More reusable; Better documented,Version control (e.g. Git); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Containers (e.g. Docker or Singularity); Conda environments and virtual environments,Version control (e.g. Git); Jupyter Notebooks,None of the above,Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake),Yes,Yes,Yes absolutely,,
,,2021-06-18 13:27:56.569146+00:00,"Lille, Nov-Dec 2019",Team helper / exercise leader (online),Graduate student,More reusable; More reproducible; More modular; Better documented,Version control (e.g. Git); Code review (e.g. via pull requests); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Conda environments and virtual environments,Version control (e.g. Git); Jupyter Notebooks; Conda environments and virtual environments,Testing (e.g. pytest),Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,"What a great workshop. Participating in the workshop gave me the opportunity to learn new programming skills and to put these skills into action in different ways in my thesis work as well as to document and collaborate on projects effectively with collaborators. I’ve already seen the impact of this amazing work in numerous aspects of my studies and life as a whole. The instruction was informative, as well as the interaction and input from other people to assist each other in solving issues arising made attending the workshop richer and successful. In this respect,  I would not hesitate to recommend it to any graduate student.",It was perfect and I enjoyed it.
,,2021-06-18 13:18:58.641779+00:00,"Trondheim, Oct 2019",Individual learner,Graduate student,More reusable; More reproducible; More modular,Version control (e.g. Git); Jupyter Notebooks,Version control (e.g. Git); Testing (e.g. pytest); Jupyter Notebooks,Code review (e.g. via pull requests); Conda environments and virtual environments,Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,,
,,2021-06-18 13:15:22.276607+00:00,"Trondheim, Feb 2020",Individual learner,Researcher,More reproducible,Version control (e.g. Git); Jupyter Notebooks,Version control (e.g. Git); Jupyter Notebooks,None of the above,Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,better structure,None
,,2021-06-18 13:15:17.154098+00:00,"Trondheim, Oct 2019",Individual learner,Other,More reusable,Jupyter Notebooks; Conda environments and virtual environments,Jupyter Notebooks; Conda environments and virtual environments,None of the above,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,No,Yes absolutely,"I was almost blank to the contents of the workshop when i attended in Oct, 2019. I learned a lot at the workshop and the teachers were very good. I have recommended this workshop to my daugther. She is a student in data engineering.",
,,2021-06-18 13:14:48.883483+00:00,"Trondheim, Feb 2020",Individual learner,Postdoc,More reusable; Better documented,Version control (e.g. Git); Code review (e.g. via pull requests),Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Conda environments and virtual environments,None of the above,Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,,
,,2021-06-18 13:13:38.880201+00:00,"Espoo, Dec 2019",Individual learner,Postdoc,More reusable; More reproducible,Code review (e.g. via pull requests); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages),Version control (e.g. Git),None of the above,Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls),Yes,Yes,Yes absolutely,,
,,2021-06-18 13:08:50.162215+00:00,"Stockholm, Nov 2019",Individual learner,Postdoc,More reusable; More reproducible; More modular; Better documented,Version control (e.g. Git); Testing (e.g. pytest),Version control (e.g. Git); Testing (e.g. pytest); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Conda environments and virtual environments,Jupyter Notebooks,Code review (e.g. via pull requests); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,,"It would be great if the git exercise included a more realistically messy merge case. I remember encountering some merging scenario in the wild sometime after the workshop and it felt like a completely different animal than merging a guacamole recipe in class. Also, a little bit more time devoted to testing would be nice."
,,2021-06-18 13:06:46.421610+00:00,"Lille, Nov-Dec 2019",Individual learner,Researcher,More reproducible,Jupyter Notebooks; Conda environments and virtual environments,Version control (e.g. Git); Containers (e.g. Docker or Singularity); Conda environments and virtual environments,None of the above,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Workflow management tools (e.g. Snakemake),Yes,Yes,Yes absolutely,"Since the workshop I did not have the occasion to produce large code. I mostly did small quick and dirty pieces of code. But now, every time I do that, I feel remorse.","Your workshop is very useful, but when working with students who have not attended it, good practices quickly vanish, because I do not have enough time to teach them. I will ask my newly recruited PhDs to explore your website and if possible attend a workshop."
,,2021-06-18 12:56:20.336502+00:00,"Stockholm, Nov 2019",Individual learner,Undergraduate student,More reusable; More reproducible; More modular; Better documented,Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages); Conda environments and virtual environments,Version control (e.g. Git); Jupyter Notebooks,None of the above,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,,
,,2021-06-18 12:50:30.146209+00:00,"Stockholm, Nov 2019",Individual learner,Graduate student,More reusable; More reproducible,Version control (e.g. Git); Code review (e.g. via pull requests); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages),Version control (e.g. Git); Code review (e.g. via pull requests); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages or GitLab Pages),None of the above,Testing (e.g. pytest); Automated testing (e.g Travis CI or GitHub Actions or GitLab CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Conda environments and virtual environments,Yes,Yes,Yes absolutely,,
