Submitter,Submitter Email,Submission Date,Post-workshop survey: Which workshop did you attend?,Post-workshop survey: What is your current position?,Post-workshop survey: Would you judge your code to be better reusable/reproducible/modular/documented as a result of attending the workshop?,Post-workshop survey: Which tools/services/workflows have you started using as a result of attending the workshop?,Post-workshop survey: Which tools/services/workflows are you using better than before as a result of attending the workshop?,Post-workshop survey: Which tools/services/workflows are you using in the same way as you did before attending the workshop?,Post-workshop survey: Which tools/services/workflows are you not using?,Post-workshop survey: Has it become easier for you to collaborate on software development with your colleagues and collaborators?,Post-workshop survey: Have you introduced one or more of your colleagues to new tools or practices as a result of the workshop?,Post-workshop survey: Would you recommend your colleagues to attend a CodeRefinery workshop?,Post-workshop survey: What else has changed in how you write code for your research after attending a CodeRefinery workshop?,Post-workshop survey: Do you have any recommendations on how we should change the CodeRefinery curriculum?
,,2020-01-27 10:50:28.265561+00:00,"Aalborg, June 2019",Other,More reusable; More reproducible; More modular,Version control (e.g. Git); Testing (e.g. pytest); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Virtual environments (e.g. conda envs),Version control (e.g. Git); Testing (e.g. pytest); Jupyter Notebooks,None of the above,Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,,
,,2019-11-21 17:58:05.235655+00:00,"Oslo, June 2019",Researcher,More reusable; More modular; Better documented,Version control (e.g. Git); Code review (e.g. via pull requests); Workflow management tools (e.g. Snakemake),Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Virtual environments (e.g. conda envs),None of the above,Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,"Easier to solve my own problems with a little basic knowledge about the different tools that are available. I'd like to learn more about the tools/services/workflows that I am not using but that were touched briefly at the workshop, but hadn't had time to do so yet.","Offer some more fruit during the breaks, instead of only pastry."
,,2019-11-21 13:09:12.683827+00:00,"Stockholm, March 2019",Graduate student,More reusable; More reproducible; More modular,Version control (e.g. Git); Code review (e.g. via pull requests); Testing (e.g. pytest),Version control (e.g. Git); Jupyter Notebooks,None of the above,Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,"I keep my code cleaner and well documented. Also, I do understand how Git works a lot better. We also did some of the exercises back at our working group, so that all of my coworkers got to know Git a bit better.",
,,2019-11-20 13:12:09.417860+00:00,"Gothenburg, May 2019",Postdoc,More reproducible; Better documented,Version control (e.g. Git); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),None of the above,None of the above,Code review (e.g. via pull requests); Testing (e.g. pytest); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),Yes,Yes,Yes absolutely,"Even if I am not using all the tools, at least I am aware about them, and I try to make my programs and workflows much better documented and reproducible by others.","Some of the tools described are great but I think they are better adapted to big working groups. As a researcher, my codes, programs, or scripts are not reviewed very often since they are meant to solve very specific problems."
,,2019-11-20 09:10:17.865618+00:00,"Helsinki, May 2019",Graduate student,More reusable; More reproducible; More modular; Better documented,Version control (e.g. Git); Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Workflow management tools (e.g. Snakemake); Virtual environments (e.g. conda envs),Version control (e.g. Git); Jupyter Notebooks; Virtual environments (e.g. conda envs),Version control (e.g. Git); Jupyter Notebooks; Virtual environments (e.g. conda envs),Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,It made me realise the obvious conclusion that without teeking track of the available resources it would be very much harder and inefficient to be a programmer. So I will definetely come to furure workshops once every two years to update my skillsets .,"No, I believe the curriculum was wider and well balanced already."
,,2019-11-19 21:54:07.277003+00:00,"Aalborg, June 2019",Researcher,More reusable; More modular; Better documented,Version control (e.g. Git); Testing (e.g. pytest),Version control (e.g. Git); Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),None of the above,Code review (e.g. via pull requests); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Workflow management tools (e.g. Snakemake),Yes,Yes,Yes absolutely,,
,,2019-11-19 10:09:21.569787+00:00,"Helsinki, May 2019",Postdoc,None of the above,None of the above,None of the above,None of the above,Version control (e.g. Git); Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),Yes,No,Probably,"Not much has changed, but this is not the fault of the workshop. I am just busy finishing several research projects and haven't had the time to change my workflows & practices at this point.","It was a very well organized workshop, thank you for that! But (as R user), I expected to learn to better organize my code into modules and functions, and learn to write functions so that they are better usable in multiple projects. And there was very little focus on that."
,,2019-11-19 10:05:11.190627+00:00,"Aalborg, June 2019",Other,More reusable; More reproducible,Version control (e.g. Git); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),Jupyter Notebooks; Virtual environments (e.g. conda envs),None of the above,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),No,Yes,Probably,,
,,2019-11-19 09:47:58.581999+00:00,"Stockholm, March 2019",Graduate student,More modular,Version control (e.g. Git),Version control (e.g. Git),Jupyter Notebooks; Workflow management tools (e.g. Snakemake); Virtual environments (e.g. conda envs),Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Containers (e.g. Docker or Singularity),No,Yes,I don't know,,
,,2019-11-19 09:42:40.510142+00:00,"Oslo, June 2019",Graduate student,None of the above,None of the above,None of the above,None of the above,None of the above,Yes,No,Yes absolutely,,
,,2019-11-19 07:54:11.605495+00:00,"Oslo, June 2019",Researcher,More reusable; More reproducible; More modular; Better documented,Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Virtual environments (e.g. conda envs),Version control (e.g. Git); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),Jupyter Notebooks; Workflow management tools (e.g. Snakemake),Code review (e.g. via pull requests); Containers (e.g. Docker or Singularity),Yes,Yes,Probably,,
,,2019-11-18 16:44:09.471236+00:00,"Aalborg, June 2019",Researcher,More reusable; More reproducible; Better documented,Version control (e.g. Git); Code review (e.g. via pull requests); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),Version control (e.g. Git); Code review (e.g. via pull requests); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),None of the above,Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),Yes,Yes,Yes absolutely,,
,,2019-11-18 14:39:17.778025+00:00,"Gothenburg, May 2019",Graduate student,Better documented,Version control (e.g. Git); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),Version control (e.g. Git); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),None of the above,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),Yes,Yes,Probably,,
,,2019-11-18 14:19:39.719727+00:00,"Tartu, April 2019",Graduate student,More reusable,Workflow management tools (e.g. Snakemake),Workflow management tools (e.g. Snakemake),None of the above,Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls),Yes,Yes,Probably,,
,,2019-11-18 13:42:55.450015+00:00,"Gothenburg, May 2019",Graduate student,More reusable; More reproducible,Version control (e.g. Git); Jupyter Notebooks,Version control (e.g. Git),Jupyter Notebooks,Automated testing (e.g Travis CI); Workflow management tools (e.g. Snakemake),Yes,Yes,Yes absolutely,,maybe release more simple projects for students which can be used to learn a better way for collaboration.
,,2019-11-18 13:41:48.969511+00:00,"Tartu, April 2019",Researcher,More reusable; More reproducible; More modular; Better documented,Version control (e.g. Git); Testing (e.g. pytest); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),Version control (e.g. Git); Code review (e.g. via pull requests); Testing (e.g. pytest); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),None of the above,Automated testing (e.g Travis CI); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),Yes,No,Yes absolutely,I'm more aware of what I should do to write a code that not only me will understand within few days.,"Not really, I enjoyed the workshop, it was exactly as advertised, and it was possible to ask question any time we needed further explanation that may go towards a topic not covered."
,,2019-11-18 13:39:18.815409+00:00,"Gothenburg, May 2019",Postdoc,More reusable; Better documented,Version control (e.g. Git); Jupyter Notebooks,Version control (e.g. Git); Jupyter Notebooks,None of the above,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),Yes,Yes,Probably,,
,,2019-11-18 13:34:48.090564+00:00,"Stockholm, March 2019",Researcher,None of the above,None of the above,None of the above,None of the above,None of the above,Yes,Yes,Yes absolutely,This course was really fantastic and I will recommend to everyone who is involved in computational modeling. I am not an extensive programmer and so it has not changed much of my working style. But at least I will be using workflow management tools later.,It is already looking good. I do not have any further suggestions.
,,2019-11-18 13:34:06.709360+00:00,"Gothenburg, May 2019",Graduate student,More reusable; More reproducible; More modular; Better documented,Version control (e.g. Git); Code review (e.g. via pull requests); Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),Version control (e.g. Git); Jupyter Notebooks,None of the above,Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,,
,,2019-11-18 13:33:04.941578+00:00,"Oslo, June 2019",Researcher,None of the above,Testing (e.g. pytest); Automated testing (e.g Travis CI); Containers (e.g. Docker or Singularity),Version control (e.g. Git); Code review (e.g. via pull requests); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),Code review (e.g. via pull requests); Testing (e.g. pytest); Jupyter Notebooks; Virtual environments (e.g. conda envs),Code review (e.g. via pull requests); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Virtual environments (e.g. conda envs),No,No,Yes absolutely,,
,,2019-11-18 13:30:52.862011+00:00,"Stockholm, March 2019",Other,More reusable; More reproducible; More modular; Better documented,Code review (e.g. via pull requests); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Workflow management tools (e.g. Snakemake),Version control (e.g. Git); Code review (e.g. via pull requests); Workflow management tools (e.g. Snakemake),None of the above,Jupyter Notebooks; Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),Yes,Yes,Yes absolutely,,
,,2019-11-18 13:28:35.151981+00:00,"Tartu, April 2019",Graduate student,None of the above,Version control (e.g. Git); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),Version control (e.g. Git); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),None of the above,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),Yes,No,Probably,,
,,2019-11-18 13:27:59.656701+00:00,"Gothenburg, May 2019",Graduate student,More reproducible,Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Workflow management tools (e.g. Snakemake),Version control (e.g. Git); Jupyter Notebooks,Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI),Yes,Yes,Yes absolutely,,
,,2019-11-18 13:26:21.104687+00:00,"Stockholm, March 2019",Researcher,More reproducible; Better documented,Version control (e.g. Git); Jupyter Notebooks,Version control (e.g. Git); Jupyter Notebooks,Version control (e.g. Git); Jupyter Notebooks,Code review (e.g. via pull requests); Testing (e.g. pytest),Yes,Yes,Yes absolutely,Trying to slowly change,It is good as it is!
,,2019-11-18 13:26:04.642830+00:00,"Aalborg, June 2019",Research software engineer / Scientific programmer,More reproducible; More modular,Version control (e.g. Git); Containers (e.g. Docker or Singularity),Version control (e.g. Git),Code review (e.g. via pull requests); Testing (e.g. pytest); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Virtual environments (e.g. conda envs),Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Workflow management tools (e.g. Snakemake),Yes,Yes,Yes absolutely,,
,,2019-11-18 13:24:20.739964+00:00,"Stockholm, March 2019",Graduate student,More reusable; More reproducible,Version control (e.g. Git); Testing (e.g. pytest); Automated testing (e.g Travis CI); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Virtual environments (e.g. conda envs),Version control (e.g. Git); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),None of the above,Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,,
,,2019-11-18 13:23:15.403472+00:00,"Stockholm, March 2019",Postdoc,More reusable; More reproducible,Version control (e.g. Git); Virtual environments (e.g. conda envs),Version control (e.g. Git); Virtual environments (e.g. conda envs),Version control (e.g. Git),Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,,
,,2019-11-18 09:53:18.612902+00:00,"Tartu, April 2019",Researcher,More reusable; More modular; Better documented,None of the above,Version control (e.g. Git); Virtual environments (e.g. conda envs),None of the above,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,,
,,2019-11-17 08:20:12.046956+00:00,"Tartu, April 2019",Researcher,More reusable; More modular; Better documented,Version control (e.g. Git); Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Version control (e.g. Git),Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),No,Yes,Yes absolutely,,
,,2019-11-13 10:35:18.532853+00:00,"Gothenburg, May 2019",Postdoc,More modular; Better documented,Code review (e.g. via pull requests); Jupyter Notebooks,Version control (e.g. Git); Jupyter Notebooks,None of the above,Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),Yes,Yes,Probably,"I used some of these tools before, but I was not confident at it. Now I have a better overview how to handle them, and since the materials of the workshop are available, I can check anything again. - This makes coding more efficient and faster.","If there are enough participants, maybe language-based subgroups can be interesting. More Matlab, Python or C specific parts could be added. Some details are differently optimised for the languages."
,,2019-11-12 22:18:38.748026+00:00,"Oslo, June 2019",Postdoc,More reusable; More modular; Better documented,Code review (e.g. via pull requests); Testing (e.g. pytest); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),Version control (e.g. Git); Virtual environments (e.g. conda envs),Jupyter Notebooks,Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,,
,,2019-11-12 13:14:16.032880+00:00,"Oslo, June 2019",Postdoc,More reusable; More modular,Version control (e.g. Git),Virtual environments (e.g. conda envs),Jupyter Notebooks,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),No,No,Probably,Switched language (to Python),
,,2019-11-12 10:40:14.405601+00:00,"Tartu, April 2019",Researcher,More reusable; More reproducible; Better documented,Version control (e.g. Git); Code review (e.g. via pull requests); Automated testing (e.g Travis CI); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Workflow management tools (e.g. Snakemake),Version control (e.g. Git); Code review (e.g. via pull requests); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),None of the above,Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),Yes,Yes,Yes absolutely,,
,,2019-11-12 09:39:55.709178+00:00,"Aalborg, June 2019",Graduate student,More reusable; More reproducible; Better documented,Version control (e.g. Git); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Virtual environments (e.g. conda envs),None of the above,Code review (e.g. via pull requests),Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,,
,,2019-11-12 09:13:53.832391+00:00,"Stockholm, March 2019",Graduate student,More reusable; More reproducible; More modular; Better documented,Testing (e.g. pytest); Jupyter Notebooks; Virtual environments (e.g. conda envs),Version control (e.g. Git); Testing (e.g. pytest); Jupyter Notebooks; Virtual environments (e.g. conda envs),None of the above,Code review (e.g. via pull requests); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,"As previously said, my code is     more reusable, reproducible, modular, and much better documented (Sphinx).",Much more testing would been useful.
,,2019-11-12 08:02:37.169202+00:00,"Helsinki, May 2019",Other,None of the above,None of the above,Version control (e.g. Git); Testing (e.g. pytest),Code review (e.g. via pull requests); Jupyter Notebooks; Workflow management tools (e.g. Snakemake),Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),Yes,Yes,Yes absolutely,,
,,2019-11-12 07:42:31.695594+00:00,"Oslo, June 2019",Researcher,More reusable; More reproducible; More modular; Better documented,Virtual environments (e.g. conda envs),Version control (e.g. Git); Jupyter Notebooks; Virtual environments (e.g. conda envs),None of the above,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Containers (e.g. Docker or Singularity),Yes,Yes,Probably,,
,,2019-11-11 23:06:26.172743+00:00,"Gothenburg, May 2019",Graduate student,More modular; Better documented,Version control (e.g. Git); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Virtual environments (e.g. conda envs),Version control (e.g. Git); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Virtual environments (e.g. conda envs),Code review (e.g. via pull requests); Testing (e.g. pytest),Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,The writing of the actual code has not changed that much for me. On the other hand the course really helped to give me a broader perspective of what tools can be used for my future project and for the can make my workflow more efficient. The main reason why I haven't been using a lot of the tools is that I have had a lot of courses that are not directly linked to coding and so I haven't been involved in any major projects since then.,I honestly think the workshop was a great learning experience. The best part about it is the direct feedback you get by working with the projects simultaneously as you present information. I therefore think you should minimise the time spent on non-interactive presentations and just focus on more exercises.
,,2019-11-11 17:47:56.228512+00:00,"Stockholm, March 2019",Postdoc,More reusable,Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Workflow management tools (e.g. Snakemake),Version control (e.g. Git),Jupyter Notebooks,Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls),Yes,Yes,Yes absolutely,,
,,2019-11-11 14:48:39.286781+00:00,"Stockholm, March 2019",Graduate student,More reusable; More reproducible; More modular; Better documented,Testing (e.g. pytest); Automated testing (e.g Travis CI); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Workflow management tools (e.g. Snakemake),Version control (e.g. Git),Jupyter Notebooks; Virtual environments (e.g. conda envs),Code coverage analysis (e.g. Coveralls); Containers (e.g. Docker or Singularity),Yes,Yes,Yes absolutely,"The way of structuring and managing the entire project has changed. Now, the project is managed in with a better folder structure and the concept of reproducible research is used.","Many references are given within each section of the course materials, in the form of clickable links. It would be more convenient for the learners to find relevant materials afterwards if those links can be gathered in a separate section like References."
,,2019-11-11 14:46:27.785251+00:00,"Gothenburg, May 2019",Graduate student,None of the above,None of the above,None of the above,Version control (e.g. Git); Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),Version control (e.g. Git); Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),No,No,I don't know,I have not written much code after the workshop. I will possibly start to use Git for version control if I start a new project in the future.,
,,2019-11-11 14:20:35.620984+00:00,"Gothenburg, May 2019",Graduate student,None of the above,Jupyter Notebooks,Version control (e.g. Git); Containers (e.g. Docker or Singularity),Virtual environments (e.g. conda envs),Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Workflow management tools (e.g. Snakemake),Yes,No,Yes absolutely,,
,,2019-11-11 14:19:11.088530+00:00,"Helsinki, May 2019",Postdoc,Better documented,Version control (e.g. Git),Version control (e.g. Git); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Virtual environments (e.g. conda envs),Jupyter Notebooks,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),Yes,No,Probably,,
,,2019-11-11 14:19:05.142649+00:00,"Gothenburg, May 2019",Graduate student,Better documented,Version control (e.g. Git),Version control (e.g. Git); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),Jupyter Notebooks; Virtual environments (e.g. conda envs); None of the above,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Workflow management tools (e.g. Snakemake); Containers (e.g. Docker or Singularity); None of the above,Yes,Yes,Yes absolutely,,
,,2019-11-11 14:14:36.752560+00:00,"Stockholm, March 2019",Postdoc,More reproducible,None of the above,Version control (e.g. Git),Testing (e.g. pytest); Jupyter Notebooks,Code review (e.g. via pull requests); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Workflow management tools (e.g. Snakemake); Virtual environments (e.g. conda envs),Yes,Yes,Yes absolutely,I learnt about Singularity (after the workshop),Explain Singularity!
