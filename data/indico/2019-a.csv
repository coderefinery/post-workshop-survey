Submitter,Submitter Email,Submission Date,Post-workshop survey: Which workshop did you attend?,Post-workshop survey: What is your current position?,Post-workshop survey: Would you judge your code to be better reusable/reproducible/modular/documented as a result of attending the workshop?,Post-workshop survey: Which tools/services/workflows have you started using as a result of attending the workshop?,Post-workshop survey: Which tools/services/workflows are you using better than before as a result of attending the workshop?,Post-workshop survey: Which tools/services/workflows are you using in the same way as you did before attending the workshop?,Post-workshop survey: Which tools/services/workflows are you not yet using?,Post-workshop survey: Has it become easier for you to collaborate on software development with your colleagues and collaborators?,Post-workshop survey: Have you introduced one or more of your colleagues to new tools or practices as a result of the workshop?,Post-workshop survey: What else has changed in how you write code for your research after attending a CodeRefinery workshop?,Post-workshop survey: Do you have any recommendations on how we should change the CodeRefinery curriculum?
,,2019-04-12 08:42:53.590450+00:00,"Uppsala, Dec 2018",Graduate student,More reproducible; More modular,Version control (e.g. Git); Virtual environments (e.g. conda envs),Version control (e.g. Git); Virtual environments (e.g. conda envs),None of the above,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Integrated development environments; Workflow systems (Snakemake); Containers (e.g. Docker or Singularity),No,Yes,,
,,2019-04-12 08:45:05.123379+00:00,"Kiruna, Nov 2018",Researcher,More reproducible; Better documented,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Workflow systems (e.g. Snakemake),Version control (e.g. Git); Code review (e.g. via pull requests),Jupyter Notebooks; Integrated development environments; Virtual environments (e.g. conda envs),Code coverage analysis (e.g. Coveralls); Containers (e.g. Docker or Singularity),Yes,No,,
,,2019-04-12 08:55:10.569568+00:00,"Uppsala, Dec 2018",Researcher,More reusable; More reproducible; Better documented,Testing (e.g. pytest); Automated testing (e.g Travis CI); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Workflow systems (e.g. Snakemake); Virtual environments (e.g. conda envs),Version control (e.g. Git); Containers (e.g. Docker or Singularity),Jupyter Notebooks,Code coverage analysis (e.g. Coveralls),Yes,Yes,,"The workshop content and structure is already good! But I would add more examples in context of bioinformatics as a hook in case the workshop is hosted in a mixed university environment (Uppsala University, Stockholm University or Karolinska Institutet for example)"
,,2019-04-12 09:20:32.056977+00:00,"Uppsala, Dec 2018",Research software engineer / Scientific programmer,More reusable; Better documented,Workflow systems (e.g. Snakemake),Version control (e.g. Git); Virtual environments (e.g. conda envs),None of the above,Testing (e.g. pytest); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Integrated development environments; Containers (e.g. Docker or Singularity),Yes,Yes,,
,,2019-04-12 09:39:23.997902+00:00,"Uppsala, Dec 2018",Research software engineer / Scientific programmer,More reproducible; Better documented,Version control (e.g. Git); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),Version control (e.g. Git); Code review (e.g. via pull requests); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),Virtual environments (e.g. conda envs),Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Workflow systems (Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,,For me I would have liked to have a bigger part about workflow system
,,2019-04-12 09:53:33.492717+00:00,"Kiruna, Nov 2018",Research software engineer / Scientific programmer,More reusable; More modular; Better documented,Version control (e.g. Git); Code review (e.g. via pull requests); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),None of the above,None of the above,Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Integrated development environments; Workflow systems (Snakemake); Virtual environments (e.g. conda envs),Yes,Yes,,
,,2019-04-12 10:07:06.490469+00:00,"Uppsala, Dec 2018",Graduate student,More reusable; More reproducible; More modular,Jupyter Notebooks; Workflow systems (e.g. Snakemake); Virtual environments (e.g. conda envs),Version control (e.g. Git); Jupyter Notebooks; Virtual environments (e.g. conda envs),None of the above,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),Yes,No,,
,,2019-04-12 11:01:55.335045+00:00,"Espoo, Dec 2018",Graduate student,More reusable; Better documented,Version control (e.g. Git); Jupyter Notebooks,Version control (e.g. Git),Containers (e.g. Docker or Singularity),Automated testing (e.g Travis CI); Containers (e.g. Docker or Singularity),Yes,Yes,I feel I understand software logic better,Includes more practical
,,2019-04-12 11:14:37.232540+00:00,"Espoo, Dec 2018",Postdoc,More reproducible; More modular; Better documented,Version control (e.g. Git); Workflow systems (e.g. Snakemake),Version control (e.g. Git); Workflow systems (e.g. Snakemake),Jupyter Notebooks,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Integrated development environments; Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),Yes,Yes,,
,,2019-04-12 12:01:19.005754+00:00,"Kiruna, Nov 2018",Research software engineer / Scientific programmer,Better documented,Jupyter Notebooks; Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),Version control (e.g. Git); Jupyter Notebooks; Virtual environments (e.g. conda envs),Integrated development environments,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Workflow systems (Snakemake),Yes,No,,
,,2019-04-12 12:23:21.449889+00:00,"Kiruna, Nov 2018",Other,Better documented,None of the above,Version control (e.g. Git); Testing (e.g. pytest); Virtual environments (e.g. conda envs),Version control (e.g. Git); Integrated development environments; Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Workflow systems (Snakemake),Yes,No,,"I’m not sure my answers are very helpful as I’m not part of the actual intended audience (being a software engineer).    However, I would like to thank you very much for the workshop, because it showcased a lot of things that I don’t use regularly but made me reconsider and put it (back) on my radar.    Also, now it’s much easier to communicate with some colleagues about these things (now they know what branches are)!    So, thanks a lot!"
,,2019-04-12 12:24:21.712747+00:00,"Kiruna, Nov 2018",Researcher,More reusable; More reproducible; More modular; Better documented,Testing (e.g. pytest); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),Version control (e.g. Git); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Workflow systems (e.g. Snakemake),None of the above,Code review (e.g. via pull requests); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Integrated development environments; Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),Yes,Yes,I started to use Doxygen again (for my C-code). Hopefully started to document and test my code in a better way.,"The curriculum was well-organised, very useful, interesting and fun."
,,2019-04-12 14:38:42.013927+00:00,"Espoo, Dec 2018",Postdoc,More reusable; More modular; Better documented,Testing (e.g. pytest); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Virtual environments (e.g. conda envs),Version control (e.g. Git); Integrated development environments,Jupyter Notebooks,Code review (e.g. via pull requests); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Workflow systems (Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,,"The present format is perfect for an introductory session to all these tools but for those who already attended a CodeRefinery workshop it only brings little interest to attend again. It would be great instead to have also some shorter workshops dedicated to some tools, for example testing is only shortly covered but could easily be the subject of an entire workshop itself. I would personally be greatly interested in this kind of workshops."
,,2019-04-12 15:51:49.987247+00:00,"Kiruna, Nov 2018",Graduate student,More reusable; More reproducible; More modular; Better documented,Workflow systems (e.g. Snakemake),Version control (e.g. Git); Code review (e.g. via pull requests); Testing (e.g. pytest); Workflow systems (e.g. Snakemake),Jupyter Notebooks; Virtual environments (e.g. conda envs),Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Integrated development environments; Containers (e.g. Docker or Singularity),Yes,Yes,I think more about the structure of the project.,
,,2019-04-15 09:40:12.502586+00:00,"Uppsala, Dec 2018",Researcher,More reusable; More reproducible,Code review (e.g. via pull requests); Jupyter Notebooks,Version control (e.g. Git); Code review (e.g. via pull requests),Containers (e.g. Docker or Singularity),Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Workflow systems (Snakemake),Yes,No,,maybe add more on automatic testing and more on containers
,,2019-04-15 11:09:33.440608+00:00,"Uppsala, Dec 2018",Researcher,Better documented,Version control (e.g. Git); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Virtual environments (e.g. conda envs),Version control (e.g. Git),Code review (e.g. via pull requests),Testing (e.g. pytest); Automated testing (e.g Travis CI); Containers (e.g. Docker or Singularity),Yes,Yes,,
,,2019-04-15 21:13:52.886515+00:00,"Kiruna, Nov 2018",Graduate student,More reusable; More reproducible; More modular; Better documented,Testing (e.g. pytest); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Workflow systems (e.g. Snakemake),Version control (e.g. Git); Testing (e.g. pytest); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Workflow systems (e.g. Snakemake),Integrated development environments; Virtual environments (e.g. conda envs),Code review (e.g. via pull requests); Automated testing (e.g Travis CI); Containers (e.g. Docker or Singularity),Yes,Yes,,
,,2019-04-16 07:59:50.593993+00:00,"Espoo, Dec 2018",Graduate student,More modular; Better documented,Version control (e.g. Git); Testing (e.g. pytest); Automated testing (e.g Travis CI); Containers (e.g. Docker or Singularity),Version control (e.g. Git); Code review (e.g. via pull requests),None of the above,Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Workflow systems (Snakemake),Yes,Yes,,
,,2019-04-16 09:11:31.433235+00:00,"Kiruna, Nov 2018",Graduate student,More reusable; Better documented,None of the above,Version control (e.g. Git); Code review (e.g. via pull requests); Workflow systems (e.g. Snakemake),None of the above,Testing (e.g. pytest); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Virtual environments (e.g. conda envs),Yes,No,,
,,2019-04-16 13:18:19.983890+00:00,"Uppsala, Dec 2018",Graduate student,Better documented,Jupyter Notebooks,Jupyter Notebooks,None of the above,Version control (e.g. Git); Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Integrated development environments; Workflow systems (Snakemake); Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),No,Yes,,
,,2019-04-17 12:28:11.343789+00:00,"Kiruna, Nov 2018",Research software engineer / Scientific programmer,More reusable; More reproducible,Virtual environments (e.g. conda envs),Version control (e.g. Git),Workflow systems (e.g. Snakemake); Containers (e.g. Docker or Singularity),Testing (e.g. pytest); Automated testing (e.g Travis CI); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),Yes,Yes,I am more aware of Python code standards,
,,2019-04-18 13:20:06.674603+00:00,"Uppsala, Dec 2018",Graduate student,More modular; Better documented,Version control (e.g. Git); Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Integrated development environments; Containers (e.g. Docker or Singularity),Version control (e.g. Git); Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),Integrated development environments,Jupyter Notebooks; Virtual environments (e.g. conda envs),Yes,Yes,,
,,2019-04-18 13:24:17.247184+00:00,"Kiruna, Nov 2018",Researcher,More modular,None of the above,None of the above,Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Containers (e.g. Docker or Singularity),Version control (e.g. Git); Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Integrated development environments; Workflow systems (Snakemake); Virtual environments (e.g. conda envs),Yes,No,,
,,2019-04-18 13:29:18.367094+00:00,"Uppsala, Dec 2018",Postdoc,More reproducible; More modular; Better documented,Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Workflow systems (e.g. Snakemake),Version control (e.g. Git),Virtual environments (e.g. conda envs),Testing (e.g. pytest); Automated testing (e.g Travis CI),Yes,No,"Be more mindful of using git properly.     Not related,  but this  question in the survey: Has it become easier for you to collaborate on software development with your colleagues and collaborators?*""    Maybe you can rephrase or add other options other than yes/no. E.g most of my code tends to be for my personal use currently. Other can use my code, but it's not really a collaboration. So ""yes"" and ""no"" don't quite apply.","No comment, pretty good so far! Keep up the good work!"
,,2019-04-18 13:42:16.350590+00:00,"Uppsala, Dec 2018",Graduate student,More reusable; More reproducible; More modular; Better documented,Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls),Code review (e.g. via pull requests); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),Version control (e.g. Git),Jupyter Notebooks; Integrated development environments; Workflow systems (Snakemake); Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),Yes,Yes,,
,,2019-04-18 13:52:45.764731+00:00,"Kiruna, Nov 2018",Other,More reusable; More reproducible,Version control (e.g. Git); Code review (e.g. via pull requests); Virtual environments (e.g. conda envs),Version control (e.g. Git); Code review (e.g. via pull requests),Virtual environments (e.g. conda envs),Jupyter Notebooks; Containers (e.g. Docker or Singularity),Yes,Yes,I don't directly do research anymore but use the tools for project management i.e. producing documents and distributing our software.,"The course was very good. One thing I tried to get running was a VM to test out the services. A ""pip"" install can do very strange things to a stable working laptop... So some quick words and maybe an example VM image(s) to use would allow people to be more bold?"
,,2019-04-18 14:59:11.535076+00:00,"Uppsala, Dec 2018",Research software engineer / Scientific programmer,More reusable; More modular,None of the above,Version control (e.g. Git); Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI),None of the above,Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),Yes,No,,
,,2019-04-18 16:46:29.785178+00:00,"Kiruna, Nov 2018",Researcher,More reproducible; Better documented,Workflow systems (e.g. Snakemake),Version control (e.g. Git); Virtual environments (e.g. conda envs),Integrated development environments,Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Containers (e.g. Docker or Singularity),Yes,No,,
,,2019-04-19 06:19:07.574839+00:00,"Kiruna, Nov 2018",Graduate student,More reusable; More reproducible; More modular; Better documented,Version control (e.g. Git); Virtual environments (e.g. conda envs),Version control (e.g. Git),None of the above,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Integrated development environments; Workflow systems (Snakemake); Containers (e.g. Docker or Singularity),Yes,No,,
,,2019-04-19 10:59:23.916111+00:00,"Espoo, Dec 2018",Industry,More reusable; Better documented,None of the above,Version control (e.g. Git); Code review (e.g. via pull requests),Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Workflow systems (e.g. Snakemake); Containers (e.g. Docker or Singularity),Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Workflow systems (Snakemake); Containers (e.g. Docker or Singularity),Yes,No,I got a job as a web developer!,
,,2019-04-19 14:37:15.058278+00:00,"Espoo, Dec 2018",Postdoc,More reusable; More reproducible; Better documented,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Workflow systems (e.g. Snakemake),Version control (e.g. Git); Automated testing (e.g Travis CI); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),None of the above,Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Integrated development environments; Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),Yes,Yes,,I really liked learning about Jupyter notebooks (there is much talk about them) but also appreciate that they don't support many best practices in terms of reproducibility etc.
,,2019-04-23 07:25:19.938617+00:00,"Espoo, Dec 2018",Postdoc,More reusable; More reproducible; More modular; Better documented,Version control (e.g. Git); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),Version control (e.g. Git); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Integrated development environments,None of the above,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Workflow systems (Snakemake); Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),Yes,Yes,,
,,2019-04-23 08:17:29.825129+00:00,"Uppsala, Dec 2018",Postdoc,Better documented,Version control (e.g. Git); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),Version control (e.g. Git); Code review (e.g. via pull requests); Jupyter Notebooks,None of the above,Workflow systems (Snakemake); Containers (e.g. Docker or Singularity),Yes,Yes,,
,,2019-04-23 13:14:44.669581+00:00,"Kiruna, Nov 2018",Researcher,More reusable; More reproducible; More modular,Version control (e.g. Git),Version control (e.g. Git); Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Integrated development environments; Workflow systems (e.g. Snakemake); Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),None of the above,Code review (e.g. via pull requests); Testing (e.g. pytest); Automated testing (e.g Travis CI); Code coverage analysis (e.g. Coveralls); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Integrated development environments; Workflow systems (Snakemake); Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),Yes,Yes,,
,,2019-04-24 14:33:45.003406+00:00,"Kiruna, Nov 2018",Graduate student,More reusable; More reproducible; More modular; Better documented,Version control (e.g. Git); Testing (e.g. pytest); Jupyter Notebooks; Documentation hosting platforms (e.g. Read the Docs or GitHub Pages),Version control (e.g. Git); Testing (e.g. pytest); Jupyter Notebooks,None of the above,Code coverage analysis (e.g. Coveralls); Documentation hosting platforms (e.g. Read the Docs or GitHub Pages); Workflow systems (Snakemake); Containers (e.g. Docker or Singularity); Virtual environments (e.g. conda envs),Yes,Yes,,
